// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SystemLogger.Models;

#nullable disable

namespace SystemLogger.Migrations
{
    [DbContext(typeof(ErorrLogDbContext))]
    [Migration("20240608131933_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("ErorrLogsPhoneNumbers", b =>
                {
                    b.Property<int>("ErorrLogsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PhoneNumbersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ErorrLogsId", "PhoneNumbersId");

                    b.HasIndex("PhoneNumbersId");

                    b.ToTable("ErorrLogsPhoneNumbers");
                });

            modelBuilder.Entity("PhoneNumbersWebsite", b =>
                {
                    b.Property<int>("PhoneNumbersPK_PhoneNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WebsitesPK_Website")
                        .HasColumnType("INTEGER");

                    b.HasKey("PhoneNumbersPK_PhoneNumber", "WebsitesPK_Website");

                    b.HasIndex("WebsitesPK_Website");

                    b.ToTable("PhoneNumbersWebsite");
                });

            modelBuilder.Entity("SystemLogger.Models.ErorrLogs", b =>
                {
                    b.Property<int>("PK_ErrorLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndOfError")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartOfError")
                        .HasColumnType("TEXT");

                    b.Property<string>("WebSiteName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WebsiteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PK_ErrorLog");

                    b.HasIndex("WebsiteId");

                    b.ToTable("ErorrLogs");
                });

            modelBuilder.Entity("SystemLogger.Models.PhoneNumbers", b =>
                {
                    b.Property<int>("PK_PhoneNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PK_PhoneNumber");

                    b.ToTable("PhoneNumbers");

                    b.HasData(
                        new
                        {
                            PK_PhoneNumber = 1,
                            Name = "Contact1",
                            PhoneNumber = "0913*******"
                        });
                });

            modelBuilder.Entity("SystemLogger.Models.Website", b =>
                {
                    b.Property<int>("PK_Website")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FK_PhoneNumbers")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ServerStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PK_Website");

                    b.ToTable("WebSitesNames");

                    b.HasData(
                        new
                        {
                            PK_Website = 1,
                            FK_PhoneNumbers = 0,
                            Name = "Fadia",
                            ServerStatus = true,
                            Url = "https://fadiashop.com/wakeup"
                        },
                        new
                        {
                            PK_Website = 2,
                            FK_PhoneNumbers = 0,
                            Name = "Varzesh3",
                            ServerStatus = true,
                            Url = "https://www.varzesh3.com/"
                        });
                });

            modelBuilder.Entity("ErorrLogsPhoneNumbers", b =>
                {
                    b.HasOne("SystemLogger.Models.ErorrLogs", null)
                        .WithMany()
                        .HasForeignKey("ErorrLogsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemLogger.Models.PhoneNumbers", null)
                        .WithMany()
                        .HasForeignKey("PhoneNumbersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PhoneNumbersWebsite", b =>
                {
                    b.HasOne("SystemLogger.Models.PhoneNumbers", null)
                        .WithMany()
                        .HasForeignKey("PhoneNumbersPK_PhoneNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemLogger.Models.Website", null)
                        .WithMany()
                        .HasForeignKey("WebsitesPK_Website")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemLogger.Models.ErorrLogs", b =>
                {
                    b.HasOne("SystemLogger.Models.Website", "Website")
                        .WithMany("ErorrLogs")
                        .HasForeignKey("WebsiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Website");
                });

            modelBuilder.Entity("SystemLogger.Models.Website", b =>
                {
                    b.Navigation("ErorrLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
